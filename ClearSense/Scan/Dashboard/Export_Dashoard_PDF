from selenium import webdriver
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.chrome.service import Service
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.support import expected_conditions as EC
from selenium.webdriver.common.by import By
import time

options = Options()
service = Service("/usr/local/bin/chromedriver")

driver = webdriver.Chrome(service=service, options=options)
driver.get("https://www.google.com")

# Example: Open a website
time.sleep(3)

#maximize the window
driver.maximize_window()

#open botman url
driver.get("https://botman.cleartrust.club/")
time.sleep(2)

#Add email
email=driver.find_element(By.XPATH, '//*[@id="txtEmail"]')
email.send_keys("shrutik2@botman.ninja")
time.sleep(2)

#Add password
password=driver.find_element(By.XPATH, '//*[@id="txtPassword"]')
password.send_keys("Test@123")

#eye icon
driver.find_element(By.XPATH, "/html/body/app-root/app-login/div/div/div[1]/div/form/div[2]/div/i[2]").click()
time.sleep(2)

#rememmber me 
driver.find_element(By.XPATH, "/html/body/app-root/app-login/div/div/div[1]/div/form/div[3]/p-checkbox/div/div[2]").click()
time.sleep(2)

#Login CTA
driver.find_element(By.XPATH, "/html/body/app-root/app-login/div/div/div[1]/div/form/div[4]").click()
time.sleep(10)

#Click on Dashboard Module
Dashboard = driver.find_element(By.XPATH, "/html/body/app-root/app-layout/main/aside/app-aside-menu/div/ul[1]/li[1]/div[2]/ul/li[1]/a/span")
Dashboard.click()
time.sleep(5)

#Change the date range
Date_Range_dropdown = driver.find_element(By.XPATH, "/html/body/app-root/app-layout/main/div/div[2]/app-executive-dashboard/app-sub-header/nav/div[2]/app-date-selection/div/p-button/button")
Date_Range_dropdown.click()
time.sleep(5)

Date_Range = driver.find_element(By.XPATH, "/html/body/app-root/app-layout/main/div/div[2]/app-executive-dashboard/app-sub-header/nav/div[2]/app-date-selection/div/p-overlay/div/div/p-listbox/div/div/ul/li[5]/span")
Date_Range.click()
time.sleep(5)

#Select Scan 
Scan = driver.find_element(By.XPATH, "/html/body/app-root/app-layout/main/div/div[2]/app-executive-dashboard/div/div[1]/div[1]/div/p-dropdown[1]/div/div[2]")
Scan.click()
time.sleep(5)

Search_Scan =driver.find_element(By.XPATH, "/html/body/app-root/app-layout/main/div/div[2]/app-executive-dashboard/div/div[1]/div[1]/div/p-dropdown[1]/div/p-overlay/div/div/div/div[1]/div/input")
Search_Scan.send_keys("POP trap- CT redirect")
time.sleep(3)

select_scan = driver.find_element(By.XPATH, "//span[@class='ng-star-inserted']")
select_scan.click()
time.sleep(3)

#Choose a dimensions
dimensions_dropdown = driver.find_element(By.XPATH, "/html/body/app-root/app-layout/main/div/div[2]/app-executive-dashboard/div/div[1]/div[1]/div/p-dropdown[2]/div/div[2]")
dimensions_dropdown.click()
time.sleep(3)

Selct_dimensions = driver.find_element(By.XPATH, "//span[normalize-space()='Threat Code']")
Selct_dimensions.click()
time.sleep(3)

#Choose a value
dropdown_value = driver.find_element(By.XPATH, "/html/body/app-root/app-layout/main/div/div[2]/app-executive-dashboard/div/div[1]/div[1]/div/p-dropdown[3]/div/div[2]")
dropdown_value.click()
time.sleep(3)

Selct_value = driver.find_element(By.XPATH, "//span[normalize-space()='Arms and Ammunitions']")
Selct_value.click()
time.sleep(3)

#Click on Apply
Apply = driver.find_element(By.XPATH, "/html/body/app-root/app-layout/main/div/div[2]/app-executive-dashboard/div/div[1]/div[1]/p-button/button")
Apply.click()
time.sleep(3)

#Export PDF
Export_PDF = driver.find_element(By.XPATH, "/html/body/app-root/app-layout/main/div/div[2]/app-executive-dashboard/div/div[1]/div[2]/p-button/button")
Export_PDF.click()
time.sleep(5)

#Get the current window handle (original tab)
original_tab = driver.current_window_handle

# Wait for the new tab to open and switch to it
WebDriverWait(driver, 10).until(lambda d: len(driver.window_handles) > 1)
new_tab = [handle for handle in driver.window_handles if handle != original_tab][0]
driver.switch_to.window(new_tab)
time.sleep(5)

#PDF opened tab will get close
driver.close()

#switch to previous page
driver.switch_to.window(original_tab)

#close the browser
driver.quit()
